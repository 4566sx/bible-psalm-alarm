name: 构建 Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置 JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 设置 Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        
    - name: 创建完整的Android项目结构
      run: |
        # 创建标准Android项目目录
        mkdir -p app/src/main/java/com/biblealarm/app
        mkdir -p app/src/main/res
        
        # 复制所有资源文件
        cp -r res/* app/src/main/res/ 2>/dev/null || true
        
        # 复制Java源文件
        cp *.java app/src/main/java/com/biblealarm/app/ 2>/dev/null || true
        
        # 复制AndroidManifest.xml
        cp AndroidManifest.xml app/src/main/ 2>/dev/null || true
        
        # 复制proguard规则
        cp proguard-rules.pro app/ 2>/dev/null || true
        
    - name: 创建根目录build.gradle
      run: |
        cat > build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath 'com.android.tools.build:gradle:7.3.1'
            }
        }
        
        allprojects {
            repositories {
                google()
                mavenCentral()
            }
        }
        
        task clean(type: Delete) {
            delete rootProject.buildDir
        }
        EOF
        
    - name: 创建app模块build.gradle
      run: |
        cat > app/build.gradle << 'EOF'
        plugins {
            id 'com.android.application'
        }
        
        android {
            namespace 'com.biblealarm.app'
            compileSdk 34
            
            defaultConfig {
                applicationId "com.biblealarm.app"
                minSdk 21
                targetSdk 34
                versionCode 1
                versionName "1.0"
                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }
            
            buildTypes {
                release {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
                debug {
                    minifyEnabled false
                    debuggable true
                }
            }
            
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            
            packagingOptions {
                resources {
                    excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt']
                }
            }
        }
        
        dependencies {
            implementation 'androidx.appcompat:appcompat:1.6.1'
            implementation 'com.google.android.material:material:1.10.0'
            implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
            implementation 'androidx.cardview:cardview:1.0.0'
            implementation 'androidx.core:core:1.12.0'
            
            testImplementation 'junit:junit:4.13.2'
            androidTestImplementation 'androidx.test.ext:junit:1.1.5'
            androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
        }
        EOF
        
    - name: 创建settings.gradle
      run: |
        echo "include ':app'" > settings.gradle
        
    - name: 创建gradle.properties
      run: |
        cat > gradle.properties << 'EOF'
        org.gradle.jvmargs=-Xmx4g -Dfile.encoding=UTF-8
        android.useAndroidX=true
        android.enableJetifier=true
        android.nonTransitiveRClass=false
        android.defaults.buildfeatures.buildconfig=true
        android.nonFinalResIds=false
        org.gradle.warning.mode=none
        org.gradle.daemon=false
        EOF
        
    - name: 创建local.properties
      run: |
        echo "sdk.dir=$ANDROID_HOME" > local.properties
        
    - name: 创建Gradle Wrapper
      run: |
        gradle wrapper --gradle-version 7.5.1
        chmod +x gradlew
        
    - name: 清理项目
      run: ./gradlew clean --stacktrace
      
    - name: 构建Debug APK
      run: ./gradlew assembleDebug --stacktrace --info
      
    - name: 列出构建输出
      run: |
        echo "=== 查找APK文件 ==="
        find . -name "*.apk" -type f
        echo "=== app/build目录结构 ==="
        ls -la app/build/outputs/ || echo "outputs目录不存在"
        ls -la app/build/outputs/apk/ || echo "apk目录不存在"
        ls -la app/build/outputs/apk/debug/ || echo "debug目录不存在"
        
    - name: 上传APK文件
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: 圣经诗篇闹钟-debug-apk
        path: |
          app/build/outputs/apk/debug/*.apk
          **/*.apk
        retention-days: 30
        
    - name: 上传构建日志（如果失败）
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs
        path: |
          app/build/reports/
          build/reports/
        retention-days: 7